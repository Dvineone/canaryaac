<style>
	.PWStrengthContainer {
		position: relative;
		clear: both;
		width: 214px;
	}
	.PWStrengthIndicator {
		text-align: center;
		border: 1px solid grey;
		color: #fff;
		font-size: 10pt
	}
	.TextInputLine .PWStrengthIndicator {
		width: 242px
	}
	.PWStrengthLevel0,
	.PWStrengthLevel1 {
		background-color: #ec644b
	}
	.PWStrengthLevel2 {
		background-color: #eb8005
	}
	.PWStrengthLevel3 {
		background-color: #b0b300
	}
	.PWStrengthLevel4 {
		background-color: #20a000
	}
	.PWStrengthToolTip {
		display: none;
		position: absolute;
		width: 410px;
		top: -25px;
		padding: 0 8px 8px;
		border: 1px double #5a2800;
		color: #5a2800;
		font-size: 8pt;
		background-image: url({{ IMAGE_PATH }}/global/content/scroll.gif);
		z-index: 1000;
		left: 250px
	}
	.TextInputLine .PWStrengthToolTip {
		left: 270px;
		min-width: 250px
	}
	.BoxInputText .PWStrengthToolTip {
		background-image: none;
		left: -272px;
		width: 250px;
		margin-top: -33px;
		padding: 5px;
		font-size: 8pt;
		color: #fff;
		background-color: #da761e;
		border: 2px outset #fff;
		filter:alpha(opacity=90);
		opacity: .9;
		-moz-opacity: .9;
		-moz-border-radius: 10px;
		-webkit-border-radius: 10px;
		-khtml-border-radius: 10px;
		border-radius: 10px;
		-webkit-hyphens: auto;
		-moz-hyphens: auto;
		hyphens: auto;
		z-index: 1
	}
	.SmallPasswordForm .PWStrengthToolTip {
		top: -65px
	}
	.PWStrengthToolTipHeadline {
		font-weight: 700;
		margin-top: 8px;
		margin-bottom: 5px
	}
	.BoxInputText .PWStrengthToolTipHeadline {
		margin-top: 0
	}
	.PWStrengthToolTip .HelperDivArrow {
		background-image: url({{ IMAGE_PATH }}/global/content/helper-div-arrow.png);
		position: absolute;
		top: 7px;
		left: -8px;
		width: 8px;
		height: 13px
	}
	.SmallPasswordForm .PWStrengthToolTip .HelperDivArrow {
		top: 45px
	}
	.BoxInputText .PWStrengthToolTip .HelperDivArrow {
		display: none
	}
	.PWStrengthToolTip .InputIndicator {
		position: absolute;
		height: 12px;
		width: 12px;
		left: 0;
		top: 2px;
		float: left;
		margin-right: 5px;
		background-repeat: no-repeat
	}
	.PWStrengthToolTip .PWRule {
		position: relative;
		padding-left: 15px;
		margin-bottom: 4px
	}
	.PWStrengthToolTip .InputIndicatorOK {
		background-image: url({{ IMAGE_PATH }}/global/general/ok.gif)
	}
	.PWStrengthToolTip .InputIndicatorNotOK {
		background-image: url({{ IMAGE_PATH }}/global/general/nok.gif)
	}
	.InputIndicatorOK {
		background-image: url({{ IMAGE_PATH }}/global/general/ok.gif);
		position: relative;
		top: 5px;
		left: 218px;
		height: 12px;
		width: 12px;
		background-repeat: no-repeat;
	}
	.InputIndicatorNotOK {
		background-image: url({{ IMAGE_PATH }}/global/general/nok.gif);
		position: relative;
		top: 5px;
		left: 218px;
		height: 12px;
		width: 12px;
		background-repeat: no-repeat;
	}
</style>

<div id="createaccount" class="Box">
	<div class="Corner-tl" style="background-image:url({{IMAGE_PATH}}/global/content/corner-tl.gif);"></div>
	<div class="Corner-tr" style="background-image:url({{IMAGE_PATH}}/global/content/corner-tr.gif);"></div>
	<div class="Border_1" style="background-image:url({{IMAGE_PATH}}/global/content/border-1.gif);"></div>
	<div class="BorderTitleText" style="background-image:url({{IMAGE_PATH}}/global/content/title-background-green.gif);"></div><img id="ContentBoxHeadline" class="Title" src="{{IMAGE_PATH}}/global/strings/headline-createaccount.gif" alt="Contentbox headline">
	<div class="Border_2">
		<div class="Border_3">
			<div class="BoxContent" style="background-image:url({{IMAGE_PATH}}/global/content/scroll.gif);">
				{% if status is not empty %}
                <div class="SmallBox">
					<div class="MessageContainer">
						<div class="BoxFrameHorizontal" style="background-image:url({{IMAGE_PATH}}/global/content/box-frame-horizontal.gif);"></div>
						<div class="BoxFrameEdgeLeftTop" style="background-image:url({{IMAGE_PATH}}/global/content/box-frame-edge.gif);"></div>
						<div class="BoxFrameEdgeRightTop" style="background-image:url({{IMAGE_PATH}}/global/content/box-frame-edge.gif);"></div>
						<div class="Message">
							<div class="BoxFrameVerticalLeft" style="background-image:url({{IMAGE_PATH}}/global/content/box-frame-vertical.gif);"></div>
							<div class="BoxFrameVerticalRight" style="background-image:url({{IMAGE_PATH}}/global/content/box-frame-vertical.gif);"></div>
							<table style="width:100%;">
								<tbody>
									<tr>
										<td style="width:100%;text-align:left;"><b>{{ status|raw }}</b></td>
									</tr>
								</tbody>
							</table>
						</div>
						<div class="BoxFrameHorizontal" style="background-image:url({{IMAGE_PATH}}/global/content/box-frame-horizontal.gif);"></div>
						<div class="BoxFrameEdgeRightBottom" style="background-image:url({{IMAGE_PATH}}/global/content/box-frame-edge.gif);"></div>
						<div class="BoxFrameEdgeLeftBottom" style="background-image:url({{IMAGE_PATH}}/global/content/box-frame-edge.gif);"></div>
					</div>
				</div>
				<br>
                {% endif %}
				<div style="position:relative;top:0px;left:0px;">
					<form action="{{URL}}/createaccount" method="post" name="CreateAccountAndCharacter" id="CreateAccountAndCharacterForm">
						<div class="TableContainer">
							<div class="CaptionContainer">
								<div class="CaptionInnerContainer">
									<span class="CaptionEdgeLeftTop" style="background-image:url({{IMAGE_PATH}}/global/content/box-frame-edge.gif);"></span>
									<span class="CaptionEdgeRightTop" style="background-image:url({{IMAGE_PATH}}/global/content/box-frame-edge.gif);"></span>
									<span class="CaptionBorderTop" style="background-image:url({{IMAGE_PATH}}/global/content/table-headline-border.gif);"></span>
									<span class="CaptionVerticalLeft" style="background-image:url({{IMAGE_PATH}}/global/content/box-frame-vertical.gif);"></span>
									<div class="Text">Create New Account</div>
									<span class="CaptionVerticalRight" style="background-image:url({{IMAGE_PATH}}/global/content/box-frame-vertical.gif);"></span>
									<span class="CaptionBorderBottom" style="background-image:url({{IMAGE_PATH}}/global/content/table-headline-border.gif);"></span>
									<span class="CaptionEdgeLeftBottom" style="background-image:url({{IMAGE_PATH}}/global/content/box-frame-edge.gif);"></span>
									<span class="CaptionEdgeRightBottom" style="background-image:url({{IMAGE_PATH}}/global/content/box-frame-edge.gif);"></span>
								</div>
							</div>
							<table class="Table5" cellpadding="0" cellspacing="0">
								<tbody>
									<tr>
										<td>
											<div class="TableScrollbarWrapper" style="width: unset;">
												<div class="TableScrollbarContainer"></div>
											</div>
											<div class="InnerTableContainer" style="max-width: unset;">
												<table style="width:100%;">
													<tbody>
														<tr>
															<td>
																<div class="TableContentContainer">
																	<table class="TableContent" width="100%" style="border:1px solid #faf0d7;">
																		<tbody>
																			<tr>
																				<td class="LabelV150">
																					<span id="email_label">Email Address:</span>
																				</td>
																				<td><input id="email" name="email" class="CreateAccountFormInput" maxlength="50"><div id="email_indicator" class="InputIndicatorNotOK"></div>
																				</td>
																			</tr>
																			<tr>
																				<td></td>
																				<td>
																					<span id="email_errormessage" class="FormFieldError"></span>
																				</td>
																			</tr>
																			<tr>
																				<td class="LabelV150">
																					<span id="password1_label">Password:</span>
																				</td>
																				<td>
																					<div class="div_password">
																						<input type="password" name="password1" id="password1" class="CreateAccountFormInput" maxlength="29">
																						<div id="password1_indicator" class="InputIndicatorNotOK"></div>
																						<div class="PWStrengthContainer">
																							<div class="PWStrengthToolTip" id="StrengthDisp">
																								<div class="HelperDivArrow"></div>
																								<div class="PWRules">
																									<div class="PWStrengthToolTipHeadline">Password Rules</div>
																									<div class="PWRule">
																										<div id="PWRule01" class="InputIndicator InputIndicatorNotOK"></div>The password must have at least 10 and less than 30 letters!</div>
																									<div class="PWRule">
																										<div id="PWRule02" class="InputIndicator InputIndicatorNotOK"></div>The password must not contain invalid letters!</div>
																									<div class="PWRule">
																										<div id="PWRule03" class="InputIndicator InputIndicatorNotOK"></div>The password must contain at least one character other than A-Z or a-z!</div>
																									<div class="PWRule">
																										<div id="PWRule04" class="InputIndicator InputIndicatorNotOK"></div>The password must contain at least one lower case letter a-z!</div>
																									<div class="PWRule">
																										<div id="PWRule05" class="InputIndicator InputIndicatorNotOK"></div>The password must contain at least one upper case letter A-Z!</div>
																									<div class="PWRule">
																										<div id="PWRule06" class="InputIndicator InputIndicatorNotOK"></div>The password must contain at least one number 0-9!</div>
																								</div>
																							</div>
																							<div class="PWStrengthIndicator PWStrengthLevel0" id="PWStrengthIndicator">password strength</div>
																						</div>
																					</div>
																				</td>

																			</tr>
																			<tr>
																				<td class="LabelV150">
																					<span id="password2_label">Password Again:</span>
																				</td>
																				<td><input id="password2" type="password" name="password2" class="CreateAccountFormInput" value="" maxlength="29">
																					<div id="password2_indicator" class="InputIndicatorNotOK"></div>
																				</td>
																			</tr>
																			<tr>
																				<td></td>
																				<td>
																					<span id="password_errormessage" class="FormFieldError"></span>
																				</td>
																			</tr>
																		</tbody>
																	</table>
																</div>
															</td>
														</tr>
														<tr>
															<td>
																<div class="TableContentContainer">
																	<table class="TableContent" width="100%" style="border:1px solid #faf0d7;">
																		<tbody>
																			<tr>
																				<td class="LabelV150">
																					<span id="charactername_label">Character Name:</span>
																				</td>
																				<td>
																					<input id="charactername" name="name" class="CreateAccountFormInput" value="" maxlength="29" onblur="SendAjaxCip({DataType: 'Container'}, {Href: 'https://www.tibia.com/websiteservices/check_charactername.php',PostData: 'a_CharacterName='+this.value,Method: 'POST'});">
																					<div id="charactername_indicator" class="InputIndicator" style="background-image:url({{IMAGE_PATH}}/global/general/nok.gif);"></div>
																				</td>
																			</tr>
																			<tr>
																				<td></td>
																				<td>
																					<span id="charactername_errormessage" class="FormFieldError"></span>
																				</td>
																			</tr>
																			<tr>
																				<td class="LabelV150">
																					<span>Sex:</span>
																				</td>
																				<td>
																					<table width="100%">
																						<tbody>
																							<tr>
																								<td>
																									<span style="margin-right:75px;" class="OptionContainer">
																										<label for="sex_male">
																											<span class="OptionContainer"><input id="sex_male" type="radio" name="sex" value="1"><label for="sex_male">Male</label>
																											</span>
																										</label>
																									</span>
																									<span class="OptionContainer">
																										<label for="sex_female">
																											<span class="OptionContainer"><input id="sex_female" type="radio" name="sex" value="0"><label for="sex_female">Female</label>
																											</span>
																										</label>
																									</span>
																								</td>
																								<td></td>
																							</tr>
																						</tbody>
																					</table>
																				</td>
																			</tr>
																			{% if activevoc == 1 %}
																			<tr>
																				<td class="LabelV150">
																					<span>Vocation:</span>
																				</td>
																				<td>
																					<table width="100%">
																						<tbody>
																							<tr>
																								<td>
																									<span style="margin-right:75px;" class="OptionContainer">
																										<label for="vocation_sorcerer">
																											<span class="OptionContainer"><input id="vocation_sorcerer" type="radio" name="vocation" value="1"><label for="vocation_sorcerer">Sorcerer</label>
																											</span>
																										</label>
																									</span>
																									<span class="OptionContainer">
																										<label for="vocation_druid">
																											<span class="OptionContainer"><input id="vocation_druid" type="radio" name="vocation" value="2"><label for="vocation_druid">Druid</label>
																											</span>
																										</label>
																									</span>
																								</td>
																							</tr>
																							<tr>
																								<td>
																									<span style="margin-right:75px;" class="OptionContainer">
																										<label for="vocation_paladin">
																											<span class="OptionContainer"><input id="vocation_paladin" type="radio" name="vocation" value="3"><label for="vocation_paladin">Paladin</label>
																											</span>
																										</label>
																									</span>
																									<span class="OptionContainer">
																										<label for="vocation_knight">
																											<span class="OptionContainer"><input id="vocation_knight" type="radio" name="vocation" value="4"><label for="vocation_knight">Knight</label>
																											</span>
																										</label>
																									</span>
																								</td>
																							</tr>
																						</tbody>
																					</table>
																				</td>
																			</tr>
																			{% endif %}
																		</tbody>
																	</table>
																</div>
															</td>
														</tr>
														<tr>
															<td>
																<div class="TableContentContainer">
																	<table class="TableContent" width="100%" style="border:1px solid #faf0d7;">
																		<tbody>
																			<tr>
																				<td class="LabelV150">
																					<span>World Name:</span>
																				</td>
																				<td>
																					<div id="js_world_box">
																						<table width="100%">
																							<tbody>
																								<tr id="world_list_tr" style="text-align:left;">
																									<td style="border-style: none" align="center">
																										{% for world in worlds %}
																											<div style="width: 15em; position: relative; text-align: left;">
																												<input type="radio" name="world" id="server_{{ world.name }}" value="{{ world.id }}">
																												<label for="server_{{ world.name }}">{{ world.name }}</label>
																											</div>
																										{% endfor %}
																									</td>
																								</tr>
																							</tbody>
																						</table>
																					</div>
																				</td>
																			</tr>
																		</tbody>
																	</table>
																</div>
															</td>
														</tr>
														<tr>
															<td>
																<div class="TableContentContainer">
																	<table class="TableContent" width="100%" style="border:1px solid #faf0d7;">
																		<tbody>
																			<tr>
																				<td>
																					<b>Please select the following check box:</b>
																				</td>
																			</tr>
																			<tr>
																				<td>
																					<label><input type="checkbox" name="agreeagreements" value="true" onclick="if(this.checked == true) {  document.getElementById('agreeagreements_errormessage').innerHTML = '';} else {  document.getElementById('agreeagreements_errormessage').innerHTML = 'You have to agree to the Tibia Service Agreement, the Tibia Rules and the Tibia Privacy Policy in order to create an account!';}"> I agree to the Tibia Service Agreement, the Tibia Rules and the Tibia Privacy Policy.</label>
																				</td>
																			</tr>
																			<tr>
																				<td>
																					<span id="agreeagreements_errormessage" class="FormFieldError"></span>
																				</td>
																			</tr>
																		</tbody>
																	</table>
																</div>
															</td>
														</tr>
													</tbody>
												</table>
											</div>
										</td>
									</tr>
								</tbody>
							</table>
						</div>
						<br>
						<center>
							{% set button_name = 'Submit' %}
							{% include "blue_button.html.twig" %}
						</center>
					</form>
				</div>
			</div>
		</div>
	</div>
	<div class="Border_1" style="background-image:url({{IMAGE_PATH}}/global/content/border-1.gif);"></div>
	<div class="CornerWrapper-b">
		<div class="Corner-bl" style="background-image:url({{IMAGE_PATH}}/global/content/corner-bl.gif);"></div>
	</div>
	<div class="CornerWrapper-b">
		<div class="Corner-br" style="background-image:url({{IMAGE_PATH}}/global/content/corner-br.gif);"></div>
	</div>
</div>

<script type="text/javascript" src="{{JS_PATH}}/create_character.js"></script>

<script>
	let timeout;
let password = document.getElementById('password1')
let password2 = document.getElementById('password2')
let strengthBadge = document.getElementById('StrengthDisp')
let PWRule01 = document.getElementById('PWRule01')
let PWRule02 = document.getElementById('PWRule02')
let PWRule03 = document.getElementById('PWRule03')
let PWRule04 = document.getElementById('PWRule04')
let PWRule05 = document.getElementById('PWRule05')
let PWRule06 = document.getElementById('PWRule06')
let PWStrengthIndicator = document.getElementById('PWStrengthIndicator')
let password1_indicator = document.getElementById('password1_indicator')
let email = document.getElementById('email')
let email_indicator = document.getElementById('email_indicator')
let email_regex = /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;

let passwordConst = document.getElementById('password1')
let invalida = /[ \f\n\r\t\v\u00A0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u2028\u2029\u2028\u2029\u202f\u205f\u3000]/;
let especial = /[@!#$%^&*()/\\]/;
let minuscula = /[a-z]/;
let maiuscula = /[A-Z]/;
let numberPassword = /[0-9]/;
let indicator = 0;
let strongPassword = new RegExp('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})')
let mediumPassword = new RegExp('((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{6,}))|((?=.*[a-z])(?=.*[A-Z])(?=.*[^A-Za-z0-9])(?=.{8,}))')
function StrengthChecker(PasswordParameter) {
	if (password.value.length >= 10) {
		PWRule01.classList.remove('InputIndicatorNotOK')
		PWRule01.classList.add('InputIndicatorOK')
		indicator++;
	} else {
		PWRule01.classList.remove('InputIndicatorOK')
		PWRule01.classList.add('InputIndicatorNotOK')
	}

	if (invalida.test(PasswordParameter)) {
		PWRule02.classList.remove('InputIndicatorOK')
		PWRule02.classList.add('InputIndicatorNotOK')
	} else {
		PWRule02.classList.remove('InputIndicatorNotOK')
		PWRule02.classList.add('InputIndicatorOK')
		indicator++;
	}

	if (especial.test(PasswordParameter)) {
		PWRule03.classList.remove('InputIndicatorNotOK')
		PWRule03.classList.add('InputIndicatorOK')
		indicator++;
	} else {
		PWRule03.classList.remove('InputIndicatorOK')
		PWRule03.classList.add('InputIndicatorNotOK')
	}

	if (minuscula.test(PasswordParameter)) {
		PWRule04.classList.remove('InputIndicatorNotOK')
		PWRule04.classList.add('InputIndicatorOK')
		indicator++;
	} else {
		PWRule04.classList.remove('InputIndicatorOK')
		PWRule04.classList.add('InputIndicatorNotOK')
	}

	if (maiuscula.test(PasswordParameter)) {
		PWRule05.classList.remove('InputIndicatorNotOK')
		PWRule05.classList.add('InputIndicatorOK')
		indicator++;
	} else {
		PWRule05.classList.remove('InputIndicatorOK')
		PWRule05.classList.add('InputIndicatorNotOK')
	}

	if (numberPassword.test(PasswordParameter)) {
		PWRule06.classList.remove('InputIndicatorNotOK')
		PWRule06.classList.add('InputIndicatorOK')
		indicator++;
	} else {
		PWRule06.classList.remove('InputIndicatorOK')
		PWRule06.classList.add('InputIndicatorNotOK')
	}

	if (password.value.length > 0) {
		PWStrengthIndicator.textContent = 'very weak';
		PWStrengthIndicator.classList.remove('PWStrengthLevel0')
		PWStrengthIndicator.classList.add('PWStrengthLevel1')
	}

	if (password.value.length > 5) {
	PWStrengthIndicator.textContent = 'weak';
	PWStrengthIndicator.classList.remove('PWStrengthLevel1')
	PWStrengthIndicator.classList.add('PWStrengthLevel2')
	}

	if (password.value.length >= 10 && ! invalida.test(PasswordParameter) && especial.test(PasswordParameter) && minuscula.test(PasswordParameter) && maiuscula.test(PasswordParameter) && numberPassword.test(PasswordParameter)) {
		PWStrengthIndicator.textContent = 'medium';
		PWStrengthIndicator.classList.remove('PWStrengthLevel2')
		PWStrengthIndicator.classList.add('PWStrengthLevel3')
	}

	if (password.value.length >= 12 && ! invalida.test(PasswordParameter) && especial.test(PasswordParameter) && minuscula.test(PasswordParameter) && maiuscula.test(PasswordParameter) && numberPassword.test(PasswordParameter)) {
		PWStrengthIndicator.textContent = 'strong';
		PWStrengthIndicator.classList.remove('PWStrengthLevel3')
		PWStrengthIndicator.classList.add('PWStrengthLevel4')
		password1_indicator.classList.remove('InputIndicatorNotOK')
		password1_indicator.classList.add('InputIndicatorOK')
	}
}
password.addEventListener("input", () => {
	password1_indicator.classList.remove('InputIndicatorOK')
	password1_indicator.classList.add('InputIndicatorNotOK')

	strengthBadge.style.display = 'block'
	StrengthChecker(password.value)
	if (password.value.length !== 0) {
		strengthBadge.style.display != 'block'
	} else {
		strengthBadge.style.display = 'none'
	}
});

function PasswordTwo(one, two) {
	if (password2.value == password.value) {
		password2_indicator.classList.remove('InputIndicatorNotOK')
		password2_indicator.classList.add('InputIndicatorOK')
	}
}
password2.addEventListener("input", () => {
	password2_indicator.classList.remove('InputIndicatorOK')
	password2_indicator.classList.add('InputIndicatorNotOK')
	PasswordTwo(password.value, password1.value)
});

function isEmail(EmailParameter) {
	if (email_regex.test(EmailParameter)) {
		email_indicator.classList.remove('InputIndicatorNotOK')
		email_indicator.classList.add('InputIndicatorOK')
	} else {
		email_indicator.classList.remove('InputIndicatorOK')
		email_indicator.classList.add('InputIndicatorNotOK')
	}
}
email.addEventListener("input", () => {
	email_indicator.classList.remove('InputIndicatorOK')
	email_indicator.classList.add('InputIndicatorNotOK')
	isEmail(email.value)
});
</script>
